// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: writer.sql

package client

import (
	"context"
	"encoding/json"
)

const insertIdxGroupProposal = `-- name: InsertIdxGroupProposal :exec
insert into idx_group_proposal (chain_id, proposal_id, proposal) values ($1, $2, $3)
`

type InsertIdxGroupProposalParams struct {
	ChainID    string
	ProposalID int64
	Proposal   json.RawMessage
}

func (q *Queries) InsertIdxGroupProposal(ctx context.Context, arg InsertIdxGroupProposalParams) error {
	_, err := q.db.ExecContext(ctx, insertIdxGroupProposal, arg.ChainID, arg.ProposalID, arg.Proposal)
	return err
}

const postData = `-- name: PostData :exec
insert into data (iri, jsonld) values ($1, $2)
`

type PostDataParams struct {
	Iri    string
	Jsonld json.RawMessage
}

func (q *Queries) PostData(ctx context.Context, arg PostDataParams) error {
	_, err := q.db.ExecContext(ctx, postData, arg.Iri, arg.Jsonld)
	return err
}

const updateIdxProcessLastBlock = `-- name: UpdateIdxProcessLastBlock :exec
update idx_process set last_block=$3 where chain_id=$1 and process_name=$2
`

type UpdateIdxProcessLastBlockParams struct {
	ChainID     string
	ProcessName string
	LastBlock   int64
}

func (q *Queries) UpdateIdxProcessLastBlock(ctx context.Context, arg UpdateIdxProcessLastBlockParams) error {
	_, err := q.db.ExecContext(ctx, updateIdxProcessLastBlock, arg.ChainID, arg.ProcessName, arg.LastBlock)
	return err
}
